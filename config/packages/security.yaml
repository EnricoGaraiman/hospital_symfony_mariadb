security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Medic:
            algorithm: auto
        App\Entity\Pacient:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        pacient_user_provider:
            entity:
                class: App\Entity\Pacient
                property: email

        medic_user_provider:
            entity:
                class: App\Entity\Medic
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        admin_secured_area:
            pattern: ^/
            provider: medic_user_provider
            custom_authenticators:
                - App\Security\LoginMedicFormAuthenticator
            logout:
                path: app_logout
                target: login-medic

        user_secured_area:
            pattern: ^/
            provider: pacient_user_provider
            custom_authenticators:
                - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: login
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        secured_area:
#            form_login:
#                enable_csrf: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/medic/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/medic, roles: [ROLE_ADMIN, ROLE_MEDIC] }
        - { path: ^/pacient, roles: [ ROLE_ADMIN, ROLE_PACIENT ] }

